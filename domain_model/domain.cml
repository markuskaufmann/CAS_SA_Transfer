ContextMap PhysioContextMap {
	contains TherapieContext
}

BoundedContext TherapieContext {
	Module Benutzerverwaltung {

		basePackage = ch.hslu.physio
		Aggregate Benutzer {
			Entity Benutzer {
				aggregateRoot
				List<Rolle> rollen
				List<Gruppe> gruppen
				- Personalien personalien
				- BenutzerStatus status
				List<Attribut> zusaetzlicheAttribute
			}

			enum BenutzerStatus {
				ERSTELLT, MAIL_VERIFIZIERT, DEAKTIVIERT
			}

			ValueObject Personalien {
				String vorname
				String zwischenname
				String nachname
				String anzeigename
				String mailAdresse
			}
		}
	}

	Module UebungsKatalog {
		Aggregate UebungsKatalog {
			Entity UebungsBeschreibung {
				aggregateRoot
				String titel
				boolean istVorlage
				- UebungsBeschreibung verwendeteVorage 
				- List<BeschreibungsTeil> beschreibungsTeile
			}

			ValueObject BeschreibungsTeil {
				boolean istVorlage
				String untertitel
				String text
				Url resource
				- BeschreibungsTeil verwendeteVorlage
				- BeschreibungsTyp beschreibungsTyp
			}

			enum BeschreibungsTyp {
				TEXT_BLOCK, VIDEO, BILD, AUDIO
			}
		}
	}

	Module UebungsKollektion {
		Aggregate UebungsKollektion {
			Entity UebungsKollektion {
				aggregateRoot
				- List<BeispielSession> beispielTherapieSessionen
				- List<UebungsBeschreibung> uebungsListe
			}

			ValueObject BeispielSession {
				- List<UebungsBeschreibung> uebungsBeschreibungen
			}
		}
	}

	Module PhysioConnectV2 {
		basePackage = ch.hslu.physio

		Aggregate GesamtTherapie {
			Entity GesamtTherapie {
				aggregateRoot
				
				TherapieId therapieId
				- TherapieTyp therapieTyp
				- Benutzer patient
				- Benutzer hauptTherapeut
                - List<TherapieSession> session
				- TherapieStatus status

                Repository TherapieRepository {
	                 @GesamtTherapie find(TrackingId trackingId) throws TherapieNotFoundException;
				}
			}

			enum TherapieStatus {
	            ENTWURF, WARTEN_AUF_PATIENT, BEREIT, GESTARTET, UNTERBROCHEN, ABGESCHLOSSEN, ABGEBROCHEN, ARCHIVIERT
			}

			enum TherapieTyp {
				HOSPITALISIERT, REHABILITATION, AMBULANT, EIGENSTAENDIG
			}
		}

		Aggregate TherapieSession {
			Entity TherapieSession {
				aggregateRoot
                SessionId sessionId
				- TherapieSessionsStatus status
                - List<TherapieUebung> uebung
				- List<PatientenRueckmeldung> rueckmeldung
            }

			enum TherapieSessionsStatus {
	            ERSTELLT, NACHTRAEGLICH_ERFASST, UEBERSPRUNGEN, STARTBEREIT, GESTARTET, UNTERBROCHEN, ABGEBROCHEN, ABGESCHLOSSEN
			}
		}

		Aggregate TherapieUebung {
			Entity TherapieUebung {
				aggregateRoot
                UebungId uebungId
				- UebungsStatus status
                - UebungsBeschreibung beschreibung
				- TherapieUebungsDurchfuehrung durchfuehrung
				- List<PatientenRueckmeldung> rueckmeldung
				- List<Messdaten> messdaten
            }
			
			enum UebungsStatus {
				ERSTELLT, NACHTRAEGLICH_ERFASST, UEBERSPRUNGEN, GESTARTET, PAUSIERT, UNTERBROCHEN, ABGEBROCHEN, ABGESCHLOSSEN
			}

			ValueObject Messdaten {
				String bezeichnung
				List<Voraussetzungen> voraussetzungen
				Messart messart
				Daten daten
			}

			ValueObject TherapieUebungsDurchfuehrung {
				Zeit zeit
				Wiederholungen wiederholungen
				Boolean eigenangabeMoeglich
			}
		}

		Aggregate PatientenRueckmeldung {
			ValueObject PatientenRueckmeldung {
				aggregateRoot
				RueckmeldungsWert effektiveRueckmeldung
				- TherapeutenKommentar antwortVomTherapeuten
				- PatientenRueckmeldungsTyp rueckmeldungsTyp				
			}

			ValueObject PatientenRueckmeldungsTyp {
				String titel
				String anzeigetext
				boolean quantitativ
				Url resource
				int minimumWert
				int maximumWert
				int interval
			}

			ValueObject TherapeutenKommentar {
				String text
				Url resource
				- Benutzer therapeut
			}

		}
	}
}