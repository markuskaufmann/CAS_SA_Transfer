/* The DDD Cargo sample application modeled in CML. Note that we split the application into multiple bounded contexts. */
ContextMap PhysioContextMap {
	contains TherapieContext
}

/* The original booking application context */
BoundedContext TherapieContext {
	Module PhysioConnect {
		basePackage = ch.hslu.physio
		
		Aggregate TherapieSession {
			Entity Therapie {
				aggregateRoot
				
				TherapieId therapieId
				- Patient patient
				- Therapeut therapeut
                - List<Session> session
				- TherapieStatus status

                Repository TherapieRepository {
	                 @Therapie find(TrackingId trackingId) throws TherapieNotFoundException;
				}
			}

            Entity Session {
                SessionId sessionId
				- SessionsStatus status
                - List<Uebung> uebung
            }

            Entity Uebung {
                UebungId uebungId
				- UebungsStatus status
                - UebungsBeschreibung beschreibung
				- Durchfuehrung durchfuehrung
            }

			ValueObject UebungMessdaten {
				- List<Uebung> uebungen
				- List<Messdaten> messdaten
			}

			ValueObject Messdaten {
				String bezeichnung
				List<Voraussetzungen> voraussetzungen
				Messart messart
				Daten daten
			}

			ValueObject Durchfuehrung {
				Zeit zeit
				Wiederholungen wiederholungen
				Boolean eigenangabeMoeglich
			}

			Entity Patient {
				AhvNummer id
				- Name name
				- PatientStatus patientStatus
			}

			ValueObject Therapeut {
				MitarbeiterNummer id
				- Name name
			}

			ValueObject Name {
				String vorname
				String zwischenname
				String nachname
				String anzeigename
			}
			
			ValueObject UebungsBeschreibung {
				String titel
				- List<BeschreibungsTeil> beschreibungsTeile
			}

			ValueObject BeschreibungsTeil {
				- BeschreibungsTyp beschreibungsTyp
				String untertitel
				String text
				Url resource
			}

			enum BeschreibungsTyp {
				TEXT_BLOCK, VIDEO, BILD, AUDIO
			}
			
			enum TherapieStatus {
	            ENTWURF, WARTEN_AUF_PATIENT, BEREIT, GESTARTET, UNTERBROCHEN, ABGESCHLOSSEN, ABGEBROCHEN, ARCHIVIERT
			}

			enum SessionsStatus {
	            ERSTELLT, UEBERSPRUNGEN, STARTBEREIT, GESTARTET, UNTERBROCHEN, ABGEBROCHEN, ABGESCHLOSSEN
			}

			enum UebungsStatus {
				ERSTELLT, UEBERSPRUNGEN, GESTARTET, PAUSIERT, UNTERBROCHEN, ABGEBROCHEN, ABGESCHLOSSEN
			}

			enum PatientStatus {
				EINGELADEN, BEREIT, IN_THERAPIE, DEAKTIVIERT, GELOESCHT
			}
		}
	}
}