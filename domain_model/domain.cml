/* The DDD Cargo sample application modeled in CML. Note that we split the application into multiple bounded contexts. */
ContextMap PhysioContextMap {
	contains TherapieContext
}

/* The original booking application context */
BoundedContext TherapieContext {
	Module PhysioConnectV2 {
		basePackage = ch.hslu.physio

		Aggregate UebungsKollektion {
			Entity UebungsKollektion {
				aggregateRoot
				- List<BeispielSession> beispielTherapieSessionen
				- List<UebungsBeschreibung> uebungsListe
			}

			ValueObject BeispielSession {
				- List<UebungsBeschreibung> uebungsBeschreibungen
			}
		}

		Aggregate UebungsKatalog {
			Entity UebungsBeschreibung {
				aggregateRoot
				String titel
				boolean istVorlage
				- UebungsBeschreibung verwendeteVorage 
				- List<BeschreibungsTeil> beschreibungsTeile
			}

			ValueObject BeschreibungsTeil {
				boolean istVorlage
				String untertitel
				String text
				Url resource
				- BeschreibungsTeil verwendeteVorlage
				- BeschreibungsTyp beschreibungsTyp
			}

			enum BeschreibungsTyp {
				TEXT_BLOCK, VIDEO, BILD, AUDIO
			}
		}
		
		Aggregate TherapieSession {
			Entity GesamtTherapie {
				aggregateRoot
				
				TherapieId therapieId
				- TherapieTyp therapieTyp
				- Patient patient
				- Therapeut therapeut
                - List<TherapieSession> session
				- TherapieStatus status

                Repository TherapieRepository {
	                 @GesamtTherapie find(TrackingId trackingId) throws TherapieNotFoundException;
				}
			}

            Entity TherapieSession {
                SessionId sessionId
				- TherapieSessionsStatus status
                - List<TherapieUebung> uebung
				- List<PatientenRueckmeldung> rueckmeldung
            }

            Entity TherapieUebung {
                UebungId uebungId
				- UebungsStatus status
                - UebungsBeschreibung beschreibung
				- Durchfuehrung durchfuehrung
				- List<PatientenRueckmeldung> rueckmeldung
            }

			ValueObject UebungMessdaten {
				- List<TherapieUebung> uebungen
				- List<Messdaten> messdaten
			}

			ValueObject Messdaten {
				String bezeichnung
				List<Voraussetzungen> voraussetzungen
				Messart messart
				Daten daten
			}

			ValueObject Durchfuehrung {
				Zeit zeit
				Wiederholungen wiederholungen
				Boolean eigenangabeMoeglich
			}

			Entity Patient {
				AhvNummer id
				- Name name
				- PatientStatus patientStatus
			}

			ValueObject Therapeut {
				MitarbeiterNummer id
				- Name name
			}

			ValueObject Name {
				String vorname
				String zwischenname
				String nachname
				String anzeigename
			}

			ValueObject PatientenRueckmeldung {
				RueckmeldungsWert effektiveRueckmeldung
				- TherapeutenKommentar antwortVomTherapeuten
				- PatientenRueckmeldungsTyp rueckmeldungsTyp				
			}

			ValueObject PatientenRueckmeldungsTyp {
				String titel
				String anzeigetext
				boolean quantitativ
				Url resource
				int minimumWert
				int maximumWert
				int interval
			}

			ValueObject TherapeutenKommentar {
				String text
				Url resource
			}
			
			enum TherapieStatus {
	            ENTWURF, WARTEN_AUF_PATIENT, BEREIT, GESTARTET, UNTERBROCHEN, ABGESCHLOSSEN, ABGEBROCHEN, ARCHIVIERT
			}

			enum TherapieTyp {
				HOSPITALISIERT, REHABILITATION, AMBULANT, EIGENSTAENDIG
			}

			enum TherapieSessionsStatus {
	            ERSTELLT, UEBERSPRUNGEN, STARTBEREIT, GESTARTET, UNTERBROCHEN, ABGEBROCHEN, ABGESCHLOSSEN
			}

			enum UebungsStatus {
				ERSTELLT, UEBERSPRUNGEN, GESTARTET, PAUSIERT, UNTERBROCHEN, ABGEBROCHEN, ABGESCHLOSSEN
			}

			enum PatientStatus {
				EINGELADEN, BEREIT, IN_THERAPIE, DEAKTIVIERT, GELOESCHT
			}
		}
	}
}